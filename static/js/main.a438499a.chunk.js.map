{"version":3,"sources":["components/ListItem.jsx","components/List.jsx","App.js","reportWebVitals.js","index.js"],"names":["ListItem","item","className","value","time","List","massagesList","TransitionGroup","component","map","CSSTransition","timeout","classNames","id","in","length","unmountOnExit","App","firestore","useContext","Context","useCollectionData","collection","orderBy","textRef","useRef","getTimeString","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","clickHandler","a","current","newMassage","now","add","ref","placeholder","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createContext","ReactDOM","render","Provider","StrictMode","document","getElementById"],"mappings":"8RAWeA,EATE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,qBAAIC,UAAU,aAAd,UACE,sBAAMA,UAAU,sBAAhB,SAAuCD,EAAKE,QAC5C,sBAAMD,UAAU,mBAAhB,SAAoCD,EAAKG,WCyBhCC,EAxBF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACd,OACE,0BAASJ,UAAU,eAAnB,UACE,cAACK,EAAA,EAAD,CAAiBC,UAAU,KAAKN,UAAU,OAA1C,SACGI,GACCA,EAAaG,KAAI,SAACR,GAAD,OACf,cAACS,EAAA,EAAD,CAA6BC,QAAS,IAAKC,WAAW,aAAtD,SACE,cAAC,EAAD,CAAUX,KAAMA,KADEA,EAAKY,SAM/B,cAACH,EAAA,EAAD,CACEI,IAAKR,IAAiBA,EAAaS,OACnCJ,QAAS,IACTC,WAAW,cACXI,eAAa,EAJf,SAME,mBAAGd,UAAU,cAAb,yB,QC0COe,MA9Df,WACE,IAAQC,EAAcC,qBAAWC,GAAzBF,UACR,EAAuBG,YACrBH,EAAUI,WAAW,YAAYC,QAAQ,OADpCjB,EAAP,oBAGMkB,EAAUC,iBAAO,MAMjBC,EAAgB,WACpB,IAAMC,EAAO,IAAIC,KAEXC,EACJF,EAAKG,WAAa,GAAK,IAAMH,EAAKG,WAAaH,EAAKG,WAChDC,EACJJ,EAAKK,aAAe,GAAK,IAAML,EAAKK,aAAeL,EAAKK,aACpDC,EACJN,EAAKO,aAAe,GAAK,IAAMP,EAAKO,aAAeP,EAAKO,aAE1D,MAAM,GAAN,OAAUL,EAAV,cAAqBE,EAArB,cAAkCE,IAM9BE,EAAY,uCAAG,4BAAAC,EAAA,yDACdZ,EAAQa,QAAQlC,MADF,wDAGbmC,EAAa,CACjBzB,GAAIe,KAAKW,MACTpC,MAAOqB,EAAQa,QAAQlC,MACvBC,KAAMsB,KAGRF,EAAQa,QAAQlC,MAAQ,GATL,SAUNe,EAAUI,WAAW,YAAYkB,IAAIF,GAV/B,mFAAH,qDAalB,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,CAAMI,aAAcA,IAEpB,sBAAKJ,UAAU,OAAf,UACE,0BACEuC,IAAKjB,EACLtB,UAAU,cACVwC,YAAY,uBAEd,wBACExC,UAAU,YACVyC,KAAK,SACLC,QAAS,kBAAMT,KAHjB,yBC3COU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCCdQ,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAM3C,EAAYoC,IAASpC,YAEdE,EAAU0C,wBAAc,MAErCC,IAASC,OACP,cAAC5C,EAAQ6C,SAAT,CAAkB9D,MAAO,CAAEmD,aAAUpC,aAArC,SACE,cAAC,IAAMgD,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAG1BvB,M","file":"static/js/main.a438499a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ListItem = ({ item }) => {\r\n  return (\r\n    <li className=\"list__item\">\r\n      <span className=\"list__item__massage\">{item.value}</span>\r\n      <span className=\"list__item__time\">{item.time}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ListItem from \"./ListItem\";\r\n\r\n/**\r\n * Выводит список сообщений.\r\n */\r\nconst List = ({ massagesList }) => {\r\n  return (\r\n    <section className=\"section-list\">\r\n      <TransitionGroup component=\"ul\" className=\"list\">\r\n        {massagesList &&\r\n          massagesList.map((item) => (\r\n            <CSSTransition key={item.id} timeout={500} classNames=\"list__item\">\r\n              <ListItem item={item} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n\r\n      <CSSTransition\r\n        in={!massagesList || !massagesList.length}\r\n        timeout={300}\r\n        classNames=\"list__empty\"\r\n        unmountOnExit\r\n      >\r\n        <p className=\"list__empty\">Empty</p>\r\n      </CSSTransition>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { useContext, useRef } from \"react\";\nimport List from \"./components/List\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { Context } from \"./index\";\n\nfunction App() {\n  const { firestore } = useContext(Context);\n  const [massagesList] = useCollectionData(\n    firestore.collection(\"massages\").orderBy(\"id\")\n  );\n  const textRef = useRef(null);\n\n  /**\n   * Возвращает время в виде строки.\n   * @returns {string} \"Часы : Минуты : Секунды\"\n   */\n  const getTimeString = () => {\n    const date = new Date();\n\n    const hours =\n      date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\n    const minutes =\n      date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n    const seconds =\n      date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n\n    return `${hours} : ${minutes} : ${seconds}`;\n  };\n\n  /**\n   * Слушает нажатие кнопки, создает новое сообщение и отправляет на базу.\n   */\n  const clickHandler = async () => {\n    if (!textRef.current.value) return;\n\n    const newMassage = {\n      id: Date.now(),\n      value: textRef.current.value,\n      time: getTimeString(),\n    };\n\n    textRef.current.value = \"\";\n    return await firestore.collection(\"massages\").add(newMassage);\n  };\n\n  return (\n    <div className=\"app\">\n      <List massagesList={massagesList} />\n\n      <div className=\"form\">\n        <textarea\n          ref={textRef}\n          className=\"form__input\"\n          placeholder=\"Input massage here\"\n        ></textarea>\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={() => clickHandler()}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyD1MDSz1Bfub_sau0gNSy7AjECMKE8KKQg\",\n  authDomain: \"wup-tz-base.firebaseapp.com\",\n  projectId: \"wup-tz-base\",\n  storageBucket: \"wup-tz-base.appspot.com\",\n  messagingSenderId: \"213862386579\",\n  appId: \"1:213862386579:web:372c02a3d03d08e2307666\",\n});\n\nconst firestore = firebase.firestore();\n\nexport const Context = createContext(null);\n\nReactDOM.render(\n  <Context.Provider value={{ firebase, firestore }}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Context.Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}